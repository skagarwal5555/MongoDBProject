
//create index on geolocation and category
db.drivers.createIndex( { currentGeoLocation: "2dsphere" , "vehicles.category":1} );


//Find the drivers and car category within 5 km
db.drivers.aggregate( 
      {
		$geoNear: 
		{
			near: { type: "Point", coordinates: [ 88.0521, 27.1751 ] },
		    maxDistance: 5000,
			spherical: true,
			distanceField: "dist.calculated"
		}
	  },
	  {$unwind: "$vehicles"},
	  {$match: { "vehicles.isActiveUsed" : true }},
      {
		$project: 
		{
			"firstname":1,
			"lastname":1,
			"vehicles.category":1
		}
	  }
    ).pretty();
	

//Find the drivers within 5 KM with Suv Category
db.drivers.aggregate( 
      {
		$geoNear: 
		{
			near: { type: "Point", coordinates: [ 88.0521, 27.1751 ] },
		    maxDistance: 5000,
			spherical: true,
			distanceField: "dist.calculated"
		}
	  },
	  {$unwind: "$vehicles"},
	  {$match: { "vehicles.isActiveUsed" : true , "vehicles.category":"Suv"}},
      {
		$project: 
		{
			"firstname":1,
			"lastname":1,
			"vehicles.category":1
		}
	  }
    ).pretty();

	
db.drivers.find({ "_id":1, "trips.tripId" : 103 } , { "firstname":1,"lastname":1,"rating":1, "trips.tripId":1, "trips.driverRating":1}).pretty();

//update driver rating for a trip provided by the user
db.drivers.update({ "_id":1, "trips.tripId" : 103 }, { $set : { "trips.$.driverRating" : 4 }});

//calculate total rating of driver
db.drivers.aggregate( [
   { $match: { _id: 1 } },
   {
     $set: {
        rating: { $avg: "$trips.driverRating" }
     }
   },
      {
		$project: 
		{
			"firstname":1,
			"lastname":1,
			"rating":1
		}
	  }
]).pretty();


//Delete a Saved Address
db.drivers.update({"_id":1}, { $pull: { "savedAddress" : { "zipCode":79108 } }} );

db.drivers.find({ "_id":1 } , { "firstname":1,"lastname":1, "savedAddress" :1}).pretty();




